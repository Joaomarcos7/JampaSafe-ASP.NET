
@model Dados.Relato
@{
    Layout = null;
}

@using (Html.BeginForm("Edit", "Relatos", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    @Html.AntiForgeryToken()


<div class="form-horizontal">


    <div style="display:flex;flex-direction:row;justify-content:space-between;">
        <h3 style="margin-left:8px;color:black;font-weight:bold;">Editar Relato</h3>
        <div style="font-size:35px; position:relative;bottom:28px;cursor:pointer;left:20px;" id="fechamodaledit"><i class="fa-solid fa-xmark"></i></div>
    </div>


    <br />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        @Html.LabelFor(model => model.imagem3, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input name="imagem" type="file" value="@Model.imagem3" />
            @Html.ValidationMessageFor(model => model.imagem3, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.data, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.data, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(model => model.data, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.codtipo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("codtipo", null, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.codtipo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="cep">CEP</label>
        <div class="col-md-10">
            <input type="text" id="CEPEDIT" name="cep" />
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.bairro, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
           <input type="text"  id="bairroedit" name="bairro" >
            @Html.ValidationMessageFor(model => model.bairro, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.descricao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.descricao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.descricao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="margin:8px 0px;">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Edit" class="btn btn-default " id="submit" style="border:1px solid black" />
        </div>
    </div>
</div>


   
}

@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/jquery")

<script>

    $("#CEPEDIT").blur(async () => {
        let cep = $("#CEPEDIT").val();
        await $.getJSON("https://viacep.com.br/ws/" + cep + "/json/", (json) => { //metodo especial de pegar JSON
            let bairro = json.bairro;
            $("#bairroedit").val(bairro);
        })
    }
    )



    $("#fechamodaledit").click(() => {
        $("#modal").fadeOut();
    })



</script>
